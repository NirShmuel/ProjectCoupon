package dao;

import exception.*;
import interfaces.CompanyDAO;

import java.sql.*;
import java.util.Collection;

import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;

import beans.Company;
import beans.Coupon;

public class CompanyDBDAO implements CompanyDAO {

	@Override
	public void createCompany(Company comp) throws DuplicateCompanyNameException, SQLException {
		try {
//			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//
//			String s = "jdbc:sqlserver://127.0.0.1:53369;databaseName=CouponProject";
			
			Class.forName("com.mysql.jdbc.Driver");

			String s = "jdbc:mysql://109.67.36.73:3306/projectcoupon";
			
			Connection con = DriverManager.getConnection(s,"Java","nir");
			
			Statement stat = con.createStatement();
				
			String sql = "INSERT INTO Company ( COMP_NAME, PWD, EMAIL) VALUES ('" +
					comp.getCompName()		+ "','"	+
					comp.getPassword()		+ "','"	+
					comp.getEmail()			+ "')";
			
			// When running execute() with a second parameter set to RETURN_GENERATED_KEYS you can get the PK valuse generated by the sql-server
			stat.execute(sql, Statement.RETURN_GENERATED_KEYS );
			
			ResultSet set = stat.getGeneratedKeys();
			set.next();
			
			// Setting the Id of the company to the one received from the server.
			comp.setId( set.getLong(1) );
			

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			if ( e.getMessage().contains("Duplicate")){
				throw new DuplicateCompanyNameException();
			} else {
				throw e;
			}
		} 
	}
	
	@Override
	public void removeCompany(long id) {
		try {
			Class.forName("com.mysql.jdbc.Driver");

			String s = "jdbc:mysql://109.67.36.73:3306/projectcoupon";
			Connection con = DriverManager.getConnection(s,"Java","nir");
			
			Statement stat = con.createStatement();
					
			String sql = "DELETE FROM Company WHERE ID = '" + id + "'";

			stat.execute(sql);
			
			if ( stat.getUpdateCount() == 0 ) {
				System.out.println("Company did not exist in the first place....");
			}


		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void updateCompany(Company comp) {
		
	}

	@Override
	public Company getCompany(long id) throws DuplicateCompanyNameException, SQLException {
			
		Company comp = new Company();
		
		try {
			
			Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
			String s = "jdbc:sqlserver://127.0.0.1:53369;databaseName=CouponProject";	
			Connection con = DriverManager.getConnection(s,"Java","nir");
			
			Statement stat = con.createStatement();
					
			String sql = "SELECT * FROM Company WHERE ID ='" + id + "'";
			stat.execute(sql);
			ResultSet set = stat.getResultSet();
			
			if  ( set.next() ){
				comp.setCompName( set.getString("COMP_NAME") );
				comp.setEmail( set.getString("EMAIL") );
				comp.setPassword( set.getString("PASSWORD") );
				comp.setId( id );
				
			}
			
	

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			if ( e.getMessage().contains("duplicate")){
				throw new DuplicateCompanyNameException();
			} else {
				throw e;
			}
		}
		
		return comp;
	}

	@Override
	public Collection<Company> getAllCompanies() {
		return null;
	}

	@Override
	public Collection<Coupon> getCoupons() {
		
		return null;
	}

	@Override
	public boolean login(String name, String password) {
		return false;
	}

}
